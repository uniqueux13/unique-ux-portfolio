/* src/pages/AboutPage.module.css */
/* Refactored V3: Focus on Story, Philosophy, Values */

/* --- Hero Section Styles --- */
.wrapper {
  width: 100%;
  background-color: var(--color-background-alt);
  margin-top: var(--space-xxl);
}

.heroContent {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  padding-block: var(--space-xl) var(--space-xs);
}

.heroTitle {
  margin-bottom: var(--space-xs);
  color: var(--color-text);
  text-align: center;
}

.heroSubtitle {
  color: var(--color-secondary);
  text-align: center;
  max-width: 65ch;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: var(--space-lg);
}

/* --- General Section Styles --- */
.sectionTitle {
  margin-bottom: var(--space-sm);
  text-align: left;
  /* Alignment handled by Typography prop */
}

.sectionSubtitle { /* Used in previous version, keep if needed elsewhere */
  color: var(--color-secondary);
  max-width: 70ch;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: var(--space-lg);
   /* Alignment handled by Typography prop */
}

.sectionText { /* Used in Founder & Philosophy */
  color: var(--color-text-secondary); /* Or primary text color */
  margin-bottom: var(--space-md); /* Space between paragraphs */
  line-height: var(--line-height-paragraph);
}


/* --- Story Section --- */
.storyText {
  color: var(--color-text-secondary); /* Or primary text color */
  max-width: 80ch; /* Adjust width */
  line-height: var(--line-height-paragraph);
  text-align: left;
}

/* --- Philosophy / Approach Section --- */
.philosophySection {
  background-color: var(--color-background); /* Optional background */
  /* Let TwoColumnSection handle internal layout */
}

.philosophyPoints {
  margin-top: var(--space-lg);
  display: grid;
  /* Start with 1 column, maybe go to more on wider screens */
  grid-template-columns: 1fr;
  gap: var(--space-lg);
}

/* Tablet and up: maybe 2 or 3 columns for philosophy points */
@media (min-width: 768px) {
  .philosophyPoints {
     /* Example: keep 1 column or go to 2 if enough space in TwoColumn layout */
     grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }
}


.philosophyItem {
  display: flex;
  flex-direction: column; /* Stack icon, title, text */
  gap: var(--space-xs);
  align-items: flex-start; /* Align items left */
  text-align: left;
}

.philosophyIcon {
  color: var(--color-primary); /* Or secondary */
  margin-bottom: var(--space-xs);
  /* Size set inline in component */
}


/* --- Founder Section --- */
/* Styles primarily handled by TwoColumnSection and Typography */
/* Add overrides here if needed */


/* --- Core Values Section --- */
.valuesSection {
  background-color: var(--color-background); /* Optional alternating background */
}

.valuesGrid {
  display: grid;
  /* Responsive grid: 2 columns mobile, 4 columns desktop */
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: var(--space-lg);
  max-width: 1400px; /* Adjust max width */
  margin: var(--space-lg) auto 0 auto; /* Top margin, centered */
}

/* Example for larger screens if needed */
@media (min-width: 992px) {
  .valuesGrid {
      grid-template-columns: repeat(4, 1fr); /* Force 4 columns */
  }
}

.valueItem {
  display: flex;
  flex-direction: column;
  align-items: left; /* Center align value items */
  text-align: left;
  gap: var(--space-xs);
}

.valueIcon {
  color: var(--color-secondary); /* Use a different color for visual distinction */
  margin-bottom: var(--space-xs);
   /* Size set inline in component */
}

/* --- Video Placeholder Section --- 
.videoPlaceholder {
  /* Optional background 
}*/

.videoEmbedContainer {
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
}

/* --- Clean up --- */
/* Removed .skillsGrid, .skillCard, etc. */
/* Removed .experienceContainer etc. */

/* Container for the cards (Updated based on user's class name) */
.stepCards {
  display: flex; /* Use flexbox for layout */
  flex-wrap: wrap; /* Allow cards to wrap onto multiple lines */
  justify-content: center; /* Center cards horizontally */
  align-items: stretch; /* Make cards in the same row have equal height */
  gap: var(--space-sm); /* Gap between cards (adjust as needed) */
  margin: var(--space-lg) auto 0; /* Top margin, centered horizontally */
  padding: 0 var(--space-xs); /* Remove padding if inner Section handles it */
  max-width: var(--max-width-container, 1400px); /* Constrain width */
  list-style: none; /* Remove list styling if it was a ul/ol */
}

/* Individual outcome card styling */
.outcomeCard {
  background-color: var(--color-background-muted);
  border-radius: var(--border-radius-md); /* Slightly larger radius */
  padding: var(--space-md); /* Padding inside the card */
  text-align: left; /* Center icon and text */
  border: 1px solid var(--color-border-subtle); /* Subtle border */
  /* Flex properties for responsiveness within the flex container */
  flex: 1 1 280px; /* Grow, shrink, with a base width */
  max-width: 400px; /* Prevent cards from getting too wide */
  transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; /* Smooth hover effect */
}

/* Optional: Hover effect for the card */
.outcomeCard:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-medium);
}

/* Styling for the icon within the card */
.cardIcon {
  font-size: 2.8rem; /* << INCREASED ICON SIZE >> */
  color: var(--color-secondary); /* Default icon color (can be primary too) */
  margin-bottom: var(--space-sm); /* Space below icon */
  display: inline-block; /* Needed for margin */
  transition: color 0.2s ease-in-out; /* Smooth color transition */
}

/* Hover effect: Change icon color when hovering the CARD */
.outcomeCard:hover .cardIcon {
  color: var(--color-primary); /* << ICON COLOR ON HOVER >> */
  box-shadow: var(--color-box-shadow);
}

/* Styling for the card title */
.cardTitle {
  font-size: var(--font-size-h4); /* Adjust size as needed */
  font-weight: 600; /* Bold title */
  color: var(--color-text);
  margin-bottom: var(--space-sm); /* Space below title */
  line-height: var(--line-height-heading);
}

/* Styling for the card description text */
.cardDescription {
  font-size: var(--font-size-small); /* Smaller text for description */
  color: var(--color-secondary); /* Muted color for description */
  line-height: var(--line-height-paragraph);
}

/* --- Media Queries --- */

@media (max-width: 768px) {
  /* Adjust card container gap for smaller screens if needed */
  .stepCards {
    gap: var(--space-sm);
  }

  /* Adjust card padding for smaller screens */
  .outcomeCard {
    padding: var(--space-md);
    margin-inline: var(--space-xs);
    /* Reset max-width or adjust flex-basis if needed */
    flex-basis: 100%; /* Make cards full width on small mobile? */
    max-width: none; /* Remove max-width on small mobile */
  }

  .cardIcon {
    font-size: 2.5rem; /* Slightly smaller icon on mobile */
  }

  .cardTitle {
    font-size: var(--font-size-h5); /* Slightly smaller title on mobile */
  }
}