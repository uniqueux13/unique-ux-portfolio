/* src/components/SettingsDropdown/SettingsDropdown.module.css (Updated for Swatches) */

.settingsDropdown {
    position: absolute;
    top: 100%;
    right: 0;
    background-color: var(--color-card-background);
    border-radius: var(--card-border-radius, 8px);
    box-shadow: 0 4px 12px var(--color-box-shadow);
    padding: var(--space-md);
    z-index: 100;
    min-width: 220px; /* Might need slight adjustment */
    border: 1px solid var(--color-box-shadow);
    opacity: 0;
    transform: translateY(-10px);
    visibility: hidden;
    transition: opacity 0.2s ease-out, transform 0.2s ease-out, visibility 0s linear 0.2s;
  }
  
  .settingsDropdown.open {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
    transition: opacity 0.2s ease-out, transform 0.2s ease-out, visibility 0s linear 0s;
  }
  
  .dropdownContent { display: flex; flex-direction: column; gap: var(--space-md); }
  .settingItem { display: flex; justify-content: space-between; align-items: center; gap: var(--space-sm); }
  .settingLabel { font-size: var(--font-size-caption); color: var(--color-secondary); white-space: nowrap; }
  
  /* --- Swatch Styles --- */
  .swatchGrid {
      display: grid;
      grid-template-columns: repeat(3, 1fr); /* 3 swatches per row */
      gap: var(--space-xs);
      max-width: 100px; /* Limit width of the grid */
      justify-items: center;
  }
  
  .colorSwatch {
    width: 24px; /* Swatch size */
    height: 24px;
    border-radius: 50%; /* Circle */
    border: 2px solid var(--color-secondary); /* Base border */
    cursor: pointer;
    padding: 0;
    display: flex; /* Center checkmark */
    align-items: center;
    justify-content: center;
    transition: transform 0.1s ease, border-color 0.2s ease;
    box-shadow: 0 1px 2px rgba(0,0,0,0.1); /* Subtle shadow */
  }
  
  .colorSwatch:hover {
    transform: scale(1.1);
    border-color: var(--color-text); /* Highlight border on hover */
  }
  
  .colorSwatch:focus-visible {
     outline: none; /* Remove default */
     border-color: var(--color-text); /* Use border like hover */
     box-shadow: 0 0 0 2px var(--color-primary); /* Focus ring */
  }
  
  /* Style for the active swatch */
  .activeSwatch {
      border-color: var(--color-primary); /* Highlight active border */
      transform: scale(1.1); /* Slightly larger when active */
  }
  
  /* Check icon inside active swatch */
  .checkIcon {
      font-size: 12px;
      /* Determine checkmark color based on swatch background for contrast */
      /* This is tricky - using a simple approach for now */
      color: #fff; /* Assume white check is usually okay on dark accessible colors */
      /* A better approach might involve JS to check swatch lightness */
      mix-blend-mode: difference; /* Often helps visibility on varying backgrounds */
  }
  /* --- End Swatch Styles --- */
  
  /* Ensure DarkModeToggle fits well if needed */
  .settingItem > :global(button) { /* Target DarkModeToggle button if needed */
      /* Add styles if toggle button looks out of place */
  }