/* src/components/Hero/Hero.module.css */

.heroContent {
  width: 100%;
  max-width: 100vw;
  margin: none none;
  padding: var(--space-xs) var(--space-sm);
  background-color: transparent;
  position: relative;
  overflow: hidden;
  z-index: 0;
  --mouse-x: 0;
  --mouse-y: 0;
  perspective: 1200px;
  transform-style: preserve-3d;
  /* Apply subtle container tilt */
  transform: rotateX(calc(var(--mouse-y) * 0deg)) rotateY(calc(var(--mouse-x) * 12deg)); /* Reduced degrees */
  transition: transform 0.4s cubic-bezier(0.23, 1, 0.32, 1), background-color 0.3s ease, padding 0.3s ease, box-shadow 0.3s ease; /* Slower transition for container */
  will-change: transform, background-color;
}

[data-theme="light"] .heroContent {
  box-shadow: var;
}

.heroContent::before {
  content: '';
  position: absolute;
  inset: 0;
  z-index: -1; /* Behind content, above container bg */
  pointer-events: none;
  border-radius: inherit;
  background-image: radial-gradient(
    circle 500px at calc((var(--mouse-x) + 0.5) * 100%) calc((var(--mouse-y) + 0.5) * 100%),
    hsl(from var(--color-primary) h s l / 0.25) 0%,
    hsla(from var(--color-primary) h s l / 0.1) 40%,
    transparent 65%
  );
  background-repeat: no-repeat;
  transition: background-position 0.15s linear, opacity 0.3s ease; /* Keep fast position transition */
  will-change: background-position, opacity;
  opacity: 1;
}

[data-theme="light"] .heroContent::before {
  opacity: 0; /* Hide spotlight in light mode */
}

.heroLayoutContainer {
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
  padding-top: var(--space-md);
  width: 100%;
  margin-bottom: none;
  transform-style: preserve-3d; /* Allow children to be 3D */
}

.heroTextContent {
  flex: 1;
  width: 100%;
  text-align: left;
  position: relative;
  z-index: 1;
  /* Apply slight lift to text block */
  transform: translateZ(15px);
  will-change: transform;
}

.heroImageContent {
  flex: 1;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  z-index: 1;
  min-height: auto;
  perspective: 800px; /* Give image container its own perspective */
  transform-style: preserve-3d;
   /* Apply slight lift */
  transform: translateZ(15px);
  will-change: transform;
}

.heroSvg {
  display: block;
  width: 100%;
  margin-block: 2rem;
  max-width: clamp(440px, 25vw + 75px, 450px);
  height: auto;
  overflow: visible;
  /* Apply MORE DRAMATIC tilt to SVG */
  transform: rotateX(calc(var(--mouse-y) * 8deg)) rotateY(calc(var(--mouse-x) * -8deg)); /* Increased degrees */
  /* Faster transition for SVG tilt */
  transition: filter 0.3s ease, stroke 0.3s ease, height 0.3s ease, transform 0.2s cubic-bezier(0.25, 0.8, 0.25, 1);
  will-change: filter, stroke, transform;
  filter: drop-shadow(0 0 10px var(--color-primary));
}

[data-theme="light"] .heroSvg {
  filter: none;
}

.heroSvg path {
  stroke: var(--color-primary) !important;
  fill: none !important;
  stroke-width: 20.25px !important;
  transition: stroke 0.3s ease;
}

.heroTitle,
.heroSubtitle,
.keywordsList,
.heroButtonWrapper {
  position: relative;
  z-index: 1;
  display: flex;
  /* Removed translateZ - applied to parent container */
}

.heroTitle {
  margin-bottom: var(--space-sm);
  color: var(--color-text);
  text-align: left;
}

.heroSubtitle {
  color: var(--color-secondary);
  text-align: left;
  margin-bottom: var(--space-md);
  line-height: 40px;
  max-width: 500px;
  margin-left: 0;
  margin-right: auto;
}

.keywordsList {
  list-style: none;
  padding-left: 0;
  margin: 0 0 var(--space-lg) 0;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: var(--space-xs);
}

.keywordItem {
  display: flex;
  align-items: top;
  font-size: var(--font-size-paragraph);
  line-height: var(--line-height-paragraph);
  color: var(--color-text);
}

.keywordIcon {
  color: var(--color-primary);
  margin-right: var(--space-xs);
  margin-top: .35rem;
  font-size: 1em;
  flex-shrink: 0;
  transition: color 0.3s ease;
}

.heroButtonWrapper {
  display: flex;
  margin-top: 0;
  text-decoration: none;
}

@media (min-width: 768px) {
  

  .heroLayoutContainer {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    padding-block: 6rem;
    gap: var(--space-xs); /* Or var(--space-sm), or a specific value like 30px */
    width: 100%;
    text-align: left;
    scroll-behavior: none;
  
    /* Add negative margins to pull the container outwards */
    margin: -12px;
    
    /* Crucially, calculate the width to compensate for the negative margins */
    /* 100% width + 24px left margin + 24px right margin */
    width: calc(100% + 148px);
  
    /* Ensure box-sizing is border-box if not set globally */
    /* This makes padding/border included IN the width/height */
    box-sizing: border-box;
  }

  .heroTextContent {
    /* Optional but recommended: Constrain text width */
    max-width: fit-content; /* Adjust this value as needed */
    /* Ensure no extra horizontal margin/padding pushing things apart */
    margin-left: 0;
    margin-right: 0; /* Might interfere with gap, often better to rely on gap */
    padding-left: 0;
    padding-right: 0; /* Rely on parent gap for spacing */
    flex-shrink: 1;
    text-align: left;
  }

  .heroImageContent {
    /* Ensure no extra horizontal margin/padding pushing things apart */
    margin-left: 0; /* Rely on parent gap */
    margin-right: 0;
    padding-left: 0; /* Rely on parent gap */
    padding-right: 0;
    /* You might give the image container a max-width too if needed,
       but usually the image itself controls this. */
    max-width: max-content;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .heroImageContent img {
      display: block;
      max-width: 100%;
      height: auto;
  }

  .heroButtonWrapper {
    text-align: left;
  }

  .heroTitle {
    text-align: left;
    line-height: 70px;
    max-width: 600px;
    font-family: var(--font-family-sora);
    font-weight: 800;
  }

  .heroSubtitle {
    text-align: left;
    line-height: 40px;
  }
}