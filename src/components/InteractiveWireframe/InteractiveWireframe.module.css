/* src/components/InteractiveWireframe/InteractiveWireframe.module.css */

.wireframeContainer {
  position: relative; /* Establishes positioning context for absolute children */
  width: 400px; /* Example width - Adjust */
  height: 350px; /* Example height - Adjust */
  /* background-color: rgba(128, 128, 128, 0.05); /* Optional: subtle background for debugging */
  /* perspective: 800px; /* Might need for 3D-like transforms later */
  /* overflow: hidden; /* Hide elements that might animate outside */
}

/* Base style for all positioned elements */
.element {
  position: absolute;
  background-color: var(--color-header-footer-bg);
  box-sizing: border-box;
  border-radius: var(--border-radius-small, 4px);
  transition: transform 0.15s ease-out; /* Adjust timing/easing */
}

/* The main card background */
.card {
  width: 70%;
  height: 80%;
  top: 10%;
  left: 15%;
  background-color: var(--color-card-background, var(--color-background-alt));
  border: 1px solid var(--color-border-subtle, #eee);
  box-shadow: var(--shadow-low, 0 2px 5px rgba(0, 0, 0, 0.05));
  border-radius: var(--border-radius-medium, 6px);
  overflow: hidden; /* Clip internal elements if needed */
  transform: translate(
    calc(var(--hero-mouse-x, 0) * -10px),
    /* Multiplier determines sensitivity/distance */
      calc(var(--hero-mouse-y, 0) * -10px)
  );
}

/* Image placeholder inside the card */
.imagePlaceholder {
  width: 40%;
  height: 45%; /* Relative to card height */
  top: 10%;
  left: 10%;
  background-color: var(--color-header-footer-bg);
  border: 1px dashed var(--color-border, #ccc);
  display: flex;
  align-items: center;
  justify-content: center;
  transform: translate(
    calc(var(--hero-mouse-x, 0) * 3px),
    /* Very subtle movement inside card */ calc(var(--hero-mouse-y, 0) * 3px)
  );
}

.placeholderIcon {
  width: 30%;
  height: 30%;
  border: 2px solid var(--color-border, #ccc);
  border-radius: var(--border-radius-small, 4px);
  /* Basic mountain shape */
  /* background: linear-gradient(to bottom left, transparent 49%, var(--color-border, #ccc) 50%, transparent 51%),
                    linear-gradient(to bottom right, transparent 49%, var(--color-border, #ccc) 50%, transparent 51%); */
  opacity: 0.5;
}

/* Container for text lines */
.textBlock {
  position: absolute;
  top: 10%; /* Align with image top */
  left: 55%; /* To the right of the image */
  width: 35%; /* Remaining width */
  height: 45%; /* Same height as image */
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: var(--space-xs, 6px); /* Space between lines */
}

/* Text line placeholders */
.textLine {
  /* Reset position as it's inside a flex container now */
  position: relative;
  top: auto;
  left: auto;
  height: 8px; /* Example height */
  background-color: var(--color-border-muted, #e0e0e0);
}
.textLineLong {
  width: 100%;
}
.textLineMedium {
  width: 80%;
}
.textLineShort {
  width: 60%;
}

/* Button placeholder inside the card */
.button {
  width: 40%;
  height: 15%; /* Relative to card height */
  bottom: 10%;
  left: 30%; /* Centered */
  background-color: var(
    --color-primary-muted,
    rgba(var(--color-primary-rgb-val, 0, 0, 0), 0.1)
  );
  border: 1px solid var(--color-primary);
  color: var(--color-primary);
  font-size: 0.7rem;
  font-weight: 500;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--border-radius-round, 50px); /* Pill shape */
  cursor: default; /* Indicate it's not interactive */
  transform: translateY(calc(var(--hero-mouse-y, 0) * -5px));
}

/* Floating chip elements */
.chip {
  padding: var(--space-xs) var(--space-sm);
  background-color: var(--color-background);
  border: 1px solid var(--color-border);
  box-shadow: var(--shadow-low);
  font-size: 0.65rem;
  font-weight: 500;
  color: var(--color-secondary);
}
.chip1 {
  transform: translate(
      /* Combine with existing rotate if needed */
        calc(var(--hero-mouse-x, 0) * 25px),
      calc(var(--hero-mouse-y, 0) * 20px)
    )
    rotate(-5deg); /* Keep original rotation */
  top: 5%;
  left: 5%;
  transform: rotate(-5deg);
}

.chip2 {
  transform: translate(
      calc(var(--hero-mouse-x, 0) * -15px),
      calc(var(--hero-mouse-y, 0) * 10px)
    )
    rotate(8deg); /* Keep original rotation */
  top: 75%;
  left: 80%;
  transform: rotate(8deg);
}

/* Floating icon circles */
.iconCircle {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background-color: var(--color-background);
  border: 1px solid var(--color-border-subtle);
  box-shadow: var(--shadow-low);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.9rem;
  font-weight: bold;
  color: var(--color-primary);
  transition: transform 0.15s ease-out; /* Adjust timing/easing */
}
.iconCircle1 {
  top: 20%;
  left: 85%;
  transform: translate(
      calc(var(--hero-mouse-x, 0) * -22px),
      calc(var(--hero-mouse-y, 0) * -18px)
    )
    rotate(-12deg);
}
.iconCircle2 {
  top: 60%;
  left: 5%;
  transform: rotate(-12deg);
}
