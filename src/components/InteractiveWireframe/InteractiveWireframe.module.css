/* src/components/InteractiveWireframe/InteractiveWireframe.module.css */
/* Styles for the interactive hero illustration */

/* --- Container --- */
.wireframeContainer {
  position: relative;
  width: 400px; /* Base width - May be overridden by Hero.module.css */
  height: 350px; /* Base height - May be overridden by Hero.module.css */
  /* Ensure it can be centered if needed */
  margin-left: auto;
  margin-right: auto;
  /* color: var(--color-text); /* Set default text color for children */
  /* perspective: 1000px; */ /* Uncomment if using 3D rotations */
}

/* --- Base Element Styling --- */
/* Applied to most absolutely positioned floating items */
.element {
  position: absolute;
  box-sizing: border-box;
  border-radius: var(--border-radius-small, 4px);
  /* Base transition for smooth animation on all elements */
  transition: transform 0.15s ease-out;
  /* Default background for elements unless overridden */
  background-color: var(--color-background);
}

/* --- Desktop Card --- */
.card {
  /* inherits .element */
  width: 65%;
  height: 70%;
  top: 15%;
  left: 17.5%;
  background-color: var(
    --color-card-background,
    var(--color-background-alt)
  ); /* Specific background */
  border: 1px solid var(--color-border-subtle, #eee);
  box-shadow: var(--shadow-low, 0 2px 5px rgba(0, 0, 0, 0.05));
  border-radius: var(--border-radius-medium, 6px);
  overflow: hidden;
  z-index: 0; /* Base layer */
  /* Animation */
  transform: translate(
    calc(var(--hero-mouse-x, 0) * -10px),
    calc(var(--hero-mouse-y, 0) * -10px)
  );
}

/* Elements inside the Card */
.imagePlaceholder {
  /* inherits .element */
  width: 40%;
  height: 45%;
  top: 10%;
  left: 10%;
  background-color: var(--color-background-muted); /* Specific background */
  border: 1px dashed var(--color-border, #ccc);
  display: flex;
  align-items: center;
  justify-content: center;
  /* Animation */
  transform: translate(
    calc(var(--hero-mouse-x, 0) * 3px),
    calc(var(--hero-mouse-y, 0) * 3px)
  );
}

.placeholderIcon {
  /* Does not inherit .element */
  width: 30%;
  height: 30%;
  border: 2px solid var(--color-border, #ccc);
  border-radius: var(--border-radius-small, 4px);
  opacity: 0.5;
}

.textBlock {
  /* Position container for text lines */
  position: absolute;
  top: 10%;
  left: 55%;
  width: 35%;
  height: 45%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: var(--space-xs, 6px);
}

.textLine {
  /* inherits .element, but override positioning */
  position: relative; /* Positioned within textBlock */
  top: auto;
  left: auto;
  height: 8px;
  background-color: var(
    --color-border-muted,
    #e0e0e0
  ); /* Specific background */
  border-radius: 2px;
  /* No individual transform needed unless desired */
}
.textLineLong {
  width: 100%;
}
.textLineMedium {
  width: 80%;
}
.textLineShort {
  width: 60%;
}

.button {
  /* inherits .element */
  width: 40%;
  height: 15%;
  bottom: 10%;
  left: 30%;
  background-color: var(
    --color-primary-muted,
    rgba(var(--color-primary-rgb-val, 0, 0, 0), 0.1)
  ); /* Specific background */
  border: 1px solid var(--color-primary);
  color: var(--color-primary);
  font-size: 0.7rem;
  font-weight: 500;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--border-radius-small, 4px);
  cursor: default;
  /* Animation */
  transform: translateY(calc(var(--hero-mouse-y, 0) * -5px));
}

/* --- Mobile Frame --- */
.mobileFrame {
  /* inherits .element */
  width: 24%;
  aspect-ratio: 9 / 19;
  top: 45%;
  left: 78%;
  border: 2px solid var(--color-border-subtle);
  background-color: var(--color-header-footer-bg); /* Specific background */
  border-radius: var(--border-radius-md);
  box-shadow: var(--shadow-medium);
  padding: 0px;
  z-index: 5; /* Ensure it's visually distinct */
  box-shadow: var(--color-box-shadow);
  /* Animation */
  transform: translate(
      calc(var(--hero-mouse-x, 0) * 15px),
      calc(var(--hero-mouse-y, 0) * -25px)
    )
    rotate(12deg);
}

.mobileScreen {
  width: 100%;
  height: 100%;
  background-color: var(--color-background); /* Screen background */
  border-radius: var(--border-radius-medium, 8px); /* Inner screen radius */
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: var(--space-xs);
  gap: var(--space-xs);
  box-shadow: var(--color-box-shadow);
}

.mobileElement {
  /* Common style for elements inside mobile screen */
  background-color: var(--color-border-subtle);
  border-radius: var(--border-radius-small);
  width: 90%; /* Default width */
  box-shadow: var(--color-box-shadow);
}
.mobileHeader {
  height: 10px;
  width: 50%;
  margin-bottom: var(--space-sm);
}
.mobileImage {
  height: 100px;
  width: 100%;
}
.mobileText {
  height: 4px;
}
.mobileText.short {
  width: 80%;
}

/* --- Floating Chips --- */
.chip {
  /* inherits .element */
  padding: var(--space-xs) var(--space-sm);
  /* background-color: var(--color-background); */ /* Inherited */
  border: 1px solid var(--color-primary);
  background-color: var(--color--card-background);
  font-size: 0.65rem;
  font-weight: 500;
  color: var(--color-secondary);
  box-shadow: var(--color-box-shadow);
  z-index: 10; /* Above card and mobile */
}
.chip1 {
  top: 6%;
  left: 12%;
  border: 1px solid var(--color-primary);
  background-color: var(--color--card-background);
  box-shadow: var(--color-box-shadow);
  transform: translate(
      calc(var(--hero-mouse-x, 0) * 25px),
      calc(var(--hero-mouse-y, 0) * 20px)
    )
    rotate(-5deg);
}
.chip2 {
  top: 7%;
  left: 80%;
  transform: translate(
      calc(var(--hero-mouse-x, 0) * -15px),
      calc(var(--hero-mouse-y, 0) * 10px)
    )
    rotate(8deg);
}

/* --- Floating Icon Circles --- */
.iconCircle {
  /* inherits .element */
  width: 30px;
  height: 30px;
  border-radius: 50%;
  /* background-color: var(--color-background); */ /* Inherited */
  border: 1px solid var(--color-border-subtle);
  box-shadow: var(--color-box-shadow);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.9rem;
  font-weight: bold;
  color: var(--color-primary);
  z-index: 10; /* Above card and mobile */
  /* Transition already inherited from .element */
}
.iconCircle1 {
  top: 20%;
  left: 85%;
  transform: translate(
      calc(var(--hero-mouse-x, 0) * 18px),
      calc(var(--hero-mouse-y, 0) * -22px)
    )
    rotate(10deg);
}
.iconCircle2 {
  top: 60%;
  left: 5%;
  transform: translate(
      calc(var(--hero-mouse-x, 0) * -22px),
      calc(var(--hero-mouse-y, 0) * 15px)
    )
    rotate(-12deg);
}

/* --- Floating Platform & Tool Icons --- */
.iconWrapper {
  /* inherits .element */
  width: 40px;
  height: 40px;
  border-radius: 50%;
  /* background-color: var(--color-background); */ /* Inherited */
  border: 1px solid var(--color-border-subtle);
  box-shadow: var(--shadow-medium); /* Slightly stronger shadow */
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.4rem; /* Icon size */
  color: var(--color-secondary); /* Default icon color */
  overflow: hidden;
  z-index: 10; /* Above card and mobile */
  /* Transition already inherited from .element */
}

/* Positioning and Animation for each icon */
.youtubeIcon {
  top: 1%;
  left: 30%;
  transform: translate(
    calc(var(--hero-mouse-x, 0) * -20px),
    calc(var(--hero-mouse-y, 0) * 30px)
  );
}
.tiktokIcon {
  top: 5%;
  left: 55%;
  transform: translate(
    calc(var(--hero-mouse-x, 0) * 10px),
    calc(var(--hero-mouse-y, 0) * 25px)
  );
}
.linkedinIcon {
  top: 75%;
  left: 5%;
  transform: translate(
    calc(var(--hero-mouse-x, 0) * -28px),
    calc(var(--hero-mouse-y, 0) * -15px)
  );
}
.figmaIcon {
  top: 80%;
  left: 35%;
  transform: translate(
    calc(var(--hero-mouse-x, 0) * 12px),
    calc(var(--hero-mouse-y, 0) * 22px)
  );
}
.reactIcon {
  top: 85%;
  left: 60%;
  transform: translate(
    calc(var(--hero-mouse-x, 0) * -18px),
    calc(var(--hero-mouse-y, 0) * 12px)
  );
}
.webflowIcon {
  /* Placeholder using FaDesktop */
  top: 40%;
  left: 0%; /* Position off edge slightly */
  transform: translate(
    calc(var(--hero-mouse-x, 0) * 35px),
    calc(var(--hero-mouse-y, 0) * -10px)
  );
}
